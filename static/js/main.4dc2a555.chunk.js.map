{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","UserProfile","username","tag","location","avatar","stats","className","css","profile","descriptions","src","alt","name","followers","views","likes","map","id","text","value","item","label","quantity","prototype","PropTypes","string","isRequired","shape","number","UserStats","title","statistics","statList","percentage","FriendListItem","isOnline","friend__item","clsx","friends__status","friend__online","friend__offline","friend__avatar","width","friends__name","FriendList","friends","friends__list","friend","TransactionHistory","items","table","type","amount","currency","App","Profile","user","Statistics","data","transactions","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4dc2a555.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"descriptions\":\"Profile_descriptions__3772m\",\"location\":\"Profile_location__3GRdm\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"stats\":\"Profile_stats__25zJx\",\"item\":\"Profile_item__Kyaaw\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendListItem_friends__3v3Dw\",\"friends__avatar\":\"FriendListItem_friends__avatar__3CclF\",\"friends__list\":\"FriendListItem_friends__list__2RuC5\",\"friends__item\":\"FriendListItem_friends__item__3vZ97\",\"friends__status\":\"FriendListItem_friends__status__1l0jA\",\"friend__online\":\"FriendListItem_friend__online__1NP9W\",\"friend__offline\":\"FriendListItem_friend__offline__2Mtsf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__3U4Am\",\"friends__avatar\":\"FriendList_friends__avatar__1fhHS\",\"friends__list\":\"FriendList_friends__list__1Xcl3\",\"friends__item\":\"FriendList_friends__item__kZ2jY\",\"friends__status\":\"FriendList_friends__status__tUecI\",\"friend__online\":\"FriendList_friend__online__35a8e\",\"friend__offline\":\"FriendList_friend__offline__1RqLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__eBbE8\"};","import PropTypes from 'prop-types';\nimport css from './Profile.module.css';\n\nconst UserProfile = ({ username, tag, location, avatar, stats }) => (\n  <div className={css.profile}>\n    <div className={css.descriptions}>\n      <img src={avatar} alt=\"User avatar\" className={css.avatar} />\n      <p className={css.name}>{username}</p>\n      <p className={css.tag}>@{tag}</p>\n      <p className={css.location}>{location}</p>\n    </div>\n\n    <ul className={css.stats}>\n      {[\n        [1, 'Followers', stats.followers],\n        [2, 'Views', stats.views],\n        [3, 'Likes', stats.likes],\n      ].map(([id, text, value]) => (\n        <li key={id} className={css.item}>\n          <span className={css.label}> {text} </span>\n          <span className={css.quantity}> {value} </span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nUserProfile.prototype = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default UserProfile;\n","import PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\n\nconst UserStats = ({ title, stats }) => {\n  return (\n    <section className={css.statistics}>\n      {title && <h2 className={css.title}>{title}</h2>}\n      <ul className={css.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li className={css.item} key={id}>\n            <span className={css.label}> {label}</span>\n            <span className={css.percentage}> {percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nUserStats.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default UserStats;\n","import PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport css from './FriendListItem.module.css';\n\nconst FriendListItem = ({ isOnline, avatar, name }) => {\n  return (\n    <li className={css.friend__item}>\n      <span\n        className={clsx(\n          css.friends__status,\n          isOnline ? css.friend__online : css.friend__offline\n        )}\n      ></span>\n      <img className={css.friend__avatar} src={avatar} alt={name} width=\"50\" />\n      <p className={css.friends__name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem/FriendListItem';\nimport css from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <div className={css.friends}>\n      <ul className={css.friends__list}>\n        {friends.map(friend => (\n          <FriendListItem\n            key={friend.id}\n            isOnline={friend.isOnline}\n            avatar={friend.avatar}\n            name={friend.name}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport css from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={css.table}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from './Profile/Profile';\nimport user from './data/user.json';\n\nimport Statistics from './Statistics/Statistics';\nimport data from './data/data.json';\n\nimport FriendList from './FriendList/FriendList';\nimport friends from './data/friends.json';\n\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nexport const App = () => {\n  return (\n    <>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload Stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />);\n"],"sourceRoot":""}